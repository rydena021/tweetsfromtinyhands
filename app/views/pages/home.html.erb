<!-- BANNER -->
<div id="index-banner" class="parallax-container valign-wrapper">
  <div class="section">
    <div class="container">
      <br><br>
      <h1 class="header center grey-text text-darken-2">Tweets from<br>Tiny Hands</h1>
      <br><br>

    </div>
  </div>
  <div class="parallax"><%= image_tag 'clouds_wooden.png' %></div>
</div>


<!-- ABOUT -->
<div class="container">
  <div class="section">
    <div class="row">
      <div class="col s12">
          <h5 class="header col s12 grey-text text-darken-2 center">Visualizing Donald Trump's Twitter Data</h5><hr>
          <p>This site is currently under construction... The dataset is complete and the charts are functional though - so go ahead and click (or click + drag on some) to filter through Trump's tweets. You can stack several filters (i.e. on Wednesdays and Saturdays from iPhone before 1/1/17) and datatable beneath the graphs will render the 100 most recent tweets that match the selection.
          <br><br>
          Please let me know if you have any suggestions for the site! I plan to sort RTs, replies, vs Trump's own tweets. Sentiment analysis needs to be refined. Also may add reading level or some other text analyses. Also need to configure live-updates so new tweets are added automatically. I'm not sure if the site itself will end up looking anything like this-  I plan to spend a lot of time on styling after I finish the behind the scenes stuff!
          <br><br>
          Enjoy.</p>
          <br><br>
      </div>
    </div>
  </div>
</div>


<!-- PARALLAX -->
<div class="parallax-container valign-wrapper">
  <div class="section">
    <div class="container">
      <div class="row center">
        <%= image_tag("logo", size: "300", align: 'center') %>
      </div>
    </div>
  </div>
  <div class="parallax"><%= image_tag 'clouds_wooden.png' %></div>
</div>


<!-- CHARTS -->
<div class="container">
  <div class="section">


    <div class="row">
      <div class="col s12 center">

        <div id="sentiment-chart">
            <strong>Tweets by Sentiment</strong>
            <a class="reset" href="javascript:sentimentChart.filterAll();dc.redrawAll();" style="display: none;">reset</a>

            <div class="clearfix"></div>
        </div>

        <div id="day-chart">
            <strong>Tweets by Day</strong>
            <a class="reset" href="javascript:dayChart.filterAll();dc.redrawAll();" style="display: none;">reset</a>

            <div class="clearfix"></div>
        </div>

        <div id="hour-chart">
            <strong>Tweets by Hour</strong>
            <a class="reset" href="javascript:hourChart.filterAll();dc.redrawAll();" style="display: none;">reset</a>

            <div class="clearfix"></div>
        </div>

        <div id="device-chart">
            <strong>Tweets by Device</strong>
            <a class="reset" href="javascript:deviceChart.filterAll();dc.redrawAll();" style="display: none;">reset</a>

            <div class="clearfix"></div>
        </div>

      </div>
    </div>


    <div class="row">
      <div class="col s12 center">

        <div id="volume-chart">
            <strong>Tweet Timeline</strong>
            <a class="reset" href="javascript:volumeChart.filterAll();dc.redrawAll();" style="display: none;">reset</a>

            <div class="clearfix"></div>
        </div>

      </div>
    </div>


  </div>
</div>


<!-- PARALLAX SKINNY -->
<div class="parallax-container valign-wrapper parallax-skinny">
  <div class="section">
    <div class="container">
      <div class="row center">
        <div>
          <div class="dc-data-count">
            <p><span class="filter-count"></span> selected out of <span class="total-count"></span> records | <a
                  href="javascript:dc.filterAll(); dc.renderAll();">Reset All</a></p>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div class="parallax"><%= image_tag 'clouds_wooden.png' %></div>
</div>


<!-- DATATABLE -->
<div class="container">
  <div class="section">

    <div class="row">
      <div class="col s12 center">


        <table class="table bordered highlight dc-data-table"></table>

        <div class="clearfix"></div>


      </div>
    </div>

  </div>
</div>


<!-- PARALLAX -->
<div class="parallax-container valign-wrapper parallax-skinny">
  <div class="section">
    <div class="container">
      <div class="row center">

      </div>
    </div>
  </div>
  <div class="parallax"><%= image_tag 'clouds_wooden.png' %></div>
</div>


<script>

// Create chart objects.
// var dataCount = dc.dataTable('.dc-data-count');
var dayChart = dc.rowChart('#day-chart');
var hourChart = dc.barChart('#hour-chart');
var deviceChart = dc.pieChart('#device-chart');
var sentimentChart = dc.pieChart('#sentiment-chart');
var volumeChart = dc.barChart('#volume-chart');
var dataTable = dc.dataTable('.dc-data-table');

// Various formatters.
var parseDateFormat = d3.time.format("%a %b %d %X %Z %Y");
var formatDate = d3.time.format('%a %m/%d');
var formatTime = d3.time.format('%I:%M %p');


d3.json('<%= asset_path 'all_tweets.json' %>', function (data) {


    // Casting data into expected formats.
    data.forEach(function(d, i) {
        d.parsedDate = parseDateFormat.parse(d.created_at);
        d.date = formatDate(d.parsedDate);
        d.time = formatTime(d.parsedDate);
    });

    // Load the data into CrossFilter.
    var facts = crossfilter(data);

    // Create data dimensions and groupings.
    var all = facts.groupAll();

    // Create full date dimension.
    var dateDimension = facts.dimension(function (d) { return d.parsedDate; });
    var dateGroup = dateDimension.group(d3.time.day);

    // Create time-of-day dimension.
    var hourDimension = facts.dimension(function(d) { return d.parsedDate.getHours() + d.parsedDate.getMinutes() / 60; });
    var hourGroup = hourDimension.group(Math.floor);

    // Create categorical day-of-week dimension
    var dayOfWeek = facts.dimension(function (d) {
        var day = d.parsedDate.getDay();
        var name = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
        return day + '.' + name[day];
    });
    var dayOfWeekGroup = dayOfWeek.group();

    // Create categorical device dimension
    var deviceDimension = facts.dimension(function (d) {
      if (d.device === 'Android' || d.device === 'iPhone' ) {
          return d.device;
      } else {
          return 'Other'
      }
    });
    var deviceGroup = deviceDimension.group();

    // Create categorical device dimension
    var sentimentDimension = facts.dimension(function (d) { return d.sentiment; });
    var sentimentGroup = sentimentDimension.group();

    // count all the facts
    dc.dataCount(".dc-data-count")
        .dimension(facts)
        .group(all);

    // Day of week row chart
    dayChart.height(200).width(225)
        .margins({top: 10, left: 10, right: 10, bottom: 40})
        .dimension(dayOfWeek)
        .group(dayOfWeekGroup)
        .ordinalColors(['#01579B', '#0277BD', '#0288D1', '#039BE5', '#03A9F4', '#29B6F6', '#4FC3F7'])
        .label(function (d) { return d.key.split('.')[1]; })
        .title(function(d) {return d.value + ' tweets';})
        .elasticX(true)
        .xAxis().ticks(4);

    // Time of day bar chart
    hourChart.height(200).width(325)
        .margins({top: 15, left: 30, right: 15, bottom: 30})
        .dimension(hourDimension)
        .group(hourGroup)
        .gap(1)
        .x(d3.scale.linear().domain([0, 24]))
        .title(function(d) {return d.value + ' tweets';})
        .xAxisLabel('Time of Day (24hr)')
        .elasticY(true)
        .yAxis().ticks(3);

    // Device pie chart
    deviceChart.height(160).width(175)
        .radius(75)
        .innerRadius(20)
        .dimension(deviceDimension)
        .group(deviceGroup)
        .ordinalColors(['#76FF03', '#424242', '#0091EA'])
        .title(function(d) {return d.value + ' tweets';})
        .label(function (d) { return d.key });


        // Device pie chart
    sentimentChart.height(160).width(175)
        .radius(75)
        .dimension(sentimentDimension)
        .group(sentimentGroup)
        .ordinalColors(['#ff0000', '#ffff00', '#00cf00'])
        .title(function(d) {return d.value + ' tweets';})
        .label(function (d) { return d.key });

    // Tweet bar chart
    volumeChart.height(175).width(1000)
        .margins({top: 20, left: 30, right: 20, bottom: 30})
        .dimension(dateDimension)
        .group(dateGroup)
        .round(d3.time.day.round)
        .x(d3.time.scale().domain(d3.extent(data, function(d) { return d.parsedDate; })))
        // .x(d3.time.scale().domain([new Date(2015, 5, 15), new Date(2017, 3, 1)]))
        .yAxisLabel('Tweets')
        .yAxis().ticks(5);

    // Data table
    dataTable
        .dimension(dateDimension)
        .group(function(d) { return "Tweet Table" })
        .size(100)
        .columns([
            'date',
            'time',
            'tweet',
            'device'
        ])
        .sortBy(function(d){ return d.parsedDate; })
        .order(d3.descending)
        .on('renderlet', function (table) {
            table.select('tr.dc-table-group').remove();
        });

    dc.renderAll();

});
</script>
